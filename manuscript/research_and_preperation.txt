 # Research and Preparation
 
Speaking from experience, I wish that I had done a little bit of research on the Wikipedia API before I started using it. This probably should have been obvious to me, but Wikipedia is big. Big and varied. Wikipedia doesn't have a specific structure that the content of it's pages follows, which means when trying to make the content work for you on a different project, things break easily. Rules like removing styling from the content break the look of the site, and if you try to remove some content you don't want to show, you may end up accidentally deleting half the content that you do want on a few pages accidentally. I'll explain below how Wikipedia's API will shape our app.
 
We will have to bend to Wikipedia's will, and let it shape our application. Firstly, open up wikipedia's API. The documentation can be found at https://www.mediawiki.org/wiki/API:Main_page, and a nice sandbox to play with the api can be found at https://www.mediawiki.org/wiki/Special:ApiSandbox. I would recommend trying out different calls to see what comes out.
 
In the sandbox, make sure that you set the action to parse, and the format to json. On the left hand side, click action-parse, and select the Example called parse a page. In the props section, mae sure text and links are clicked. On the top right, click Make request, and view the result of the api call.

Although the api response is in a nicely ordered javascript object, the text section is a nightmare, depending on what you page you go to. We have been given a slab of html, with wikipedia's styling in it, with elements that are only useful in the original context of wikipedia. It is a lot to clean up. 

Now, look at the links section of the API response. This has every interaction that we will need in the game. For our purposes, we have what we want. There are a few links that are internal links, but with a few rules, we have the ability to remove them, without accdentally breaking other comment.
